{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dinhd\\\\Desktop\\\\Test\\\\frontend\\\\src\\\\components\\\\VideoRoom.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { LiveKitRoom, GridLayout, ParticipantTile, RoomAudioRenderer, ControlBar, useTracks } from '@livekit/components-react';\nimport '@livekit/components-styles';\nimport { Track } from 'livekit-client';\nimport './VideoRoom.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const VideoRoom = ({\n  token,\n  url,\n  roomName,\n  participantName,\n  onLeaveRoom\n}) => {\n  _s();\n  const [error, setError] = useState('');\n\n  // Handle connection errors\n  const handleError = err => {\n    console.error('Error connecting to LiveKit:', err);\n    setError(err.message || 'Failed to connect to room');\n  };\n\n  // Handle when the room is disconnected\n  const handleDisconnected = () => {\n    console.log('Disconnected from room');\n    onLeaveRoom();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-room\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"room-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: roomName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(LiveKitRoom, {\n      token: token,\n      serverUrl: url,\n      options: {\n        adaptiveStream: true,\n        dynacast: true\n      },\n      video: true,\n      audio: true,\n      onDisconnected: handleDisconnected,\n      onError: handleError,\n      className: \"livekit-container\",\n      children: [/*#__PURE__*/_jsxDEV(MyVideoConference, {\n        roomName: roomName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RoomAudioRenderer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n// Main video conference component that uses LiveKit hooks for video rendering\n_s(VideoRoom, \"/PuDV6TKqxF+sNNiHmyv2C3jNxE=\");\n_c = VideoRoom;\nconst MyVideoConference = ({\n  roomName\n}) => {\n  _s2();\n  // Get tracks for all participants\n  const tracks = useTracks([{\n    source: Track.Source.Camera,\n    withPlaceholder: true\n  }, {\n    source: Track.Source.ScreenShare,\n    withPlaceholder: false\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conference-container\",\n    children: [/*#__PURE__*/_jsxDEV(GridLayout, {\n      tracks: tracks,\n      className: \"video-grid\",\n      children: tracks.map(track => /*#__PURE__*/_jsxDEV(ParticipantTile, {\n        participant: track.participant,\n        source: track.source,\n        className: \"video-tile\"\n      }, track.participant.identity + track.source, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls-container\",\n      children: /*#__PURE__*/_jsxDEV(ControlBar, {\n        controls: {\n          camera: true,\n          microphone: true,\n          screenShare: true,\n          leave: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s2(MyVideoConference, \"pwju/lw1kcn6ALccmwSqaM8mllg=\", false, function () {\n  return [useTracks];\n});\n_c2 = MyVideoConference;\nvar _c, _c2;\n$RefreshReg$(_c, \"VideoRoom\");\n$RefreshReg$(_c2, \"MyVideoConference\");","map":{"version":3,"names":["React","useState","LiveKitRoom","GridLayout","ParticipantTile","RoomAudioRenderer","ControlBar","useTracks","Track","jsxDEV","_jsxDEV","VideoRoom","token","url","roomName","participantName","onLeaveRoom","_s","error","setError","handleError","err","console","message","handleDisconnected","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","serverUrl","options","adaptiveStream","dynacast","video","audio","onDisconnected","onError","MyVideoConference","_c","_s2","tracks","source","Source","Camera","withPlaceholder","ScreenShare","map","track","participant","identity","controls","camera","microphone","screenShare","leave","_c2","$RefreshReg$"],"sources":["C:/Users/dinhd/Desktop/Test/frontend/src/components/VideoRoom.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  LiveKitRoom,\r\n  GridLayout,\r\n  ParticipantTile,\r\n  RoomAudioRenderer,\r\n  ControlBar,\r\n  useTracks,\r\n} from '@livekit/components-react';\r\nimport '@livekit/components-styles';\r\nimport { Track } from 'livekit-client';\r\nimport './VideoRoom.css';\r\n\r\nexport const VideoRoom = ({ token, url, roomName, participantName, onLeaveRoom }) => {\r\n  const [error, setError] = useState('');\r\n\r\n  // Handle connection errors\r\n  const handleError = (err) => {\r\n    console.error('Error connecting to LiveKit:', err);\r\n    setError(err.message || 'Failed to connect to room');\r\n  };\r\n\r\n  // Handle when the room is disconnected\r\n  const handleDisconnected = () => {\r\n    console.log('Disconnected from room');\r\n    onLeaveRoom();\r\n  };\r\n\r\n  return (\r\n    <div className=\"video-room\">\r\n      <div className=\"room-header\">\r\n        <h2>{roomName}</h2>\r\n      </div>\r\n\r\n      {error && <div className=\"error\">{error}</div>}\r\n\r\n      <LiveKitRoom\r\n        token={token}\r\n        serverUrl={url}\r\n        options={{\r\n          adaptiveStream: true,\r\n          dynacast: true,\r\n        }}\r\n        video={true}\r\n        audio={true}\r\n        onDisconnected={handleDisconnected}\r\n        onError={handleError}\r\n        className=\"livekit-container\"\r\n      >\r\n        <MyVideoConference roomName={roomName} />\r\n        <RoomAudioRenderer />\r\n      </LiveKitRoom>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Main video conference component that uses LiveKit hooks for video rendering\r\nconst MyVideoConference = ({ roomName }) => {\r\n  // Get tracks for all participants\r\n  const tracks = useTracks([\r\n    { source: Track.Source.Camera, withPlaceholder: true },\r\n    { source: Track.Source.ScreenShare, withPlaceholder: false },\r\n  ]);\r\n\r\n  return (\r\n    <div className=\"conference-container\">\r\n      <GridLayout tracks={tracks} className=\"video-grid\">\r\n        {/* Render a tile for each track */}\r\n        {tracks.map((track) => (\r\n          <ParticipantTile\r\n            key={track.participant.identity + track.source}\r\n            participant={track.participant}\r\n            source={track.source}\r\n            className=\"video-tile\"\r\n          />\r\n        ))}\r\n      </GridLayout>\r\n      <div className=\"controls-container\">\r\n        <ControlBar\r\n          controls={{\r\n            camera: true,\r\n            microphone: true,\r\n            screenShare: true,\r\n            leave: true,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}