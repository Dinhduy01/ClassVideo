{"ast":null,"code":"import React,{useState}from'react';import'./JoinForm.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const JoinForm=_ref=>{let{onJoinRoom}=_ref;const[roomName,setRoomName]=useState('');const[participantName,setParticipantName]=useState('');const[isLoading,setIsLoading]=useState(false);const[error,setError]=useState('');const handleSubmit=async e=>{e.preventDefault();if(!roomName||!participantName){setError('Room name and participant name are required');return;}setIsLoading(true);setError('');try{console.log(`Requesting token for room: ${roomName}, participant: ${participantName}`);// Try to use the API with absolute URL if the proxy setup fails\nlet apiUrl='/api/get-token';console.log(`Sending request to: ${apiUrl}`);const response=await fetch(apiUrl,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({roomName,participantName})});const data=await response.json();if(!response.ok){console.error('Error response from token API:',data);throw new Error(data.error||'Failed to get token');}console.log('Token received successfully');// Don't log the actual token for security reasons\nconsole.log('LiveKit URL:',data.url);if(!data.token||!data.url){console.error('Invalid response from token API:',data);throw new Error('Invalid token response from server');}onJoinRoom({token:data.token,url:data.url,roomName,participantName});}catch(err){console.error('Error joining room:',err);// If fetch fails completely (e.g., server not running), try with a different URL\nif(err.message==='Failed to fetch'){setError('Cannot connect to server. Make sure the backend is running.');console.log('Trying fallback to direct URL...');try{const absoluteUrl='http://localhost:5000/api/get-token';console.log(`Sending fallback request to: ${absoluteUrl}`);const fallbackResponse=await fetch(absoluteUrl,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({roomName,participantName})});const fallbackData=await fallbackResponse.json();if(!fallbackResponse.ok){throw new Error(fallbackData.error||'Failed to get token');}console.log('Token received from fallback request');onJoinRoom({token:fallbackData.token,url:fallbackData.url,roomName,participantName});// Clear error since fallback worked\nsetError('');return;}catch(fallbackErr){console.error('Fallback request also failed:',fallbackErr);setError('Cannot connect to backend server. Please check that it is running at http://localhost:5000');}}else{setError(err.message||'Failed to join room');}}finally{setIsLoading(false);}};return/*#__PURE__*/_jsx(\"div\",{className:\"join-form\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"room-name\",children:\"Room Name\"}),/*#__PURE__*/_jsx(\"input\",{id:\"room-name\",type:\"text\",placeholder:\"Enter room name\",value:roomName,onChange:e=>setRoomName(e.target.value),disabled:isLoading,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"participant-name\",children:\"Your Name\"}),/*#__PURE__*/_jsx(\"input\",{id:\"participant-name\",type:\"text\",placeholder:\"Enter your name\",value:participantName,onChange:e=>setParticipantName(e.target.value),disabled:isLoading,required:true})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:error}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:isLoading||!roomName||!participantName,children:isLoading?'Joining...':'Join Room'})]})});};","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","JoinForm","_ref","onJoinRoom","roomName","setRoomName","participantName","setParticipantName","isLoading","setIsLoading","error","setError","handleSubmit","e","preventDefault","console","log","apiUrl","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","url","token","err","message","absoluteUrl","fallbackResponse","fallbackData","fallbackErr","className","children","onSubmit","htmlFor","id","type","placeholder","value","onChange","target","disabled","required"],"sources":["C:/Users/dinhd/Desktop/Test/frontend/src/components/JoinForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './JoinForm.css';\r\n\r\nexport const JoinForm = ({ onJoinRoom }) => {\r\n  const [roomName, setRoomName] = useState('');\r\n  const [participantName, setParticipantName] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!roomName || !participantName) {\r\n      setError('Room name and participant name are required');\r\n      return;\r\n    }\r\n    \r\n    setIsLoading(true);\r\n    setError('');\r\n    \r\n    try {\r\n      console.log(`Requesting token for room: ${roomName}, participant: ${participantName}`);\r\n      \r\n      // Try to use the API with absolute URL if the proxy setup fails\r\n      let apiUrl = '/api/get-token';\r\n      \r\n      console.log(`Sending request to: ${apiUrl}`);\r\n      const response = await fetch(apiUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          roomName,\r\n          participantName,\r\n        }),\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (!response.ok) {\r\n        console.error('Error response from token API:', data);\r\n        throw new Error(data.error || 'Failed to get token');\r\n      }\r\n      \r\n      console.log('Token received successfully');\r\n      // Don't log the actual token for security reasons\r\n      console.log('LiveKit URL:', data.url);\r\n      \r\n      if (!data.token || !data.url) {\r\n        console.error('Invalid response from token API:', data);\r\n        throw new Error('Invalid token response from server');\r\n      }\r\n      \r\n      onJoinRoom({\r\n        token: data.token,\r\n        url: data.url,\r\n        roomName,\r\n        participantName,\r\n      });\r\n    } catch (err) {\r\n      console.error('Error joining room:', err);\r\n      \r\n      // If fetch fails completely (e.g., server not running), try with a different URL\r\n      if (err.message === 'Failed to fetch') {\r\n        setError('Cannot connect to server. Make sure the backend is running.');\r\n        \r\n        console.log('Trying fallback to direct URL...');\r\n        try {\r\n          const absoluteUrl = 'http://localhost:5000/api/get-token';\r\n          console.log(`Sending fallback request to: ${absoluteUrl}`);\r\n          \r\n          const fallbackResponse = await fetch(absoluteUrl, {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n              roomName,\r\n              participantName,\r\n            }),\r\n          });\r\n          \r\n          const fallbackData = await fallbackResponse.json();\r\n          \r\n          if (!fallbackResponse.ok) {\r\n            throw new Error(fallbackData.error || 'Failed to get token');\r\n          }\r\n          \r\n          console.log('Token received from fallback request');\r\n          onJoinRoom({\r\n            token: fallbackData.token,\r\n            url: fallbackData.url,\r\n            roomName,\r\n            participantName,\r\n          });\r\n          \r\n          // Clear error since fallback worked\r\n          setError('');\r\n          return;\r\n        } catch (fallbackErr) {\r\n          console.error('Fallback request also failed:', fallbackErr);\r\n          setError('Cannot connect to backend server. Please check that it is running at http://localhost:5000');\r\n        }\r\n      } else {\r\n        setError(err.message || 'Failed to join room');\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"join-form\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"room-name\">Room Name</label>\r\n          <input\r\n            id=\"room-name\"\r\n            type=\"text\"\r\n            placeholder=\"Enter room name\"\r\n            value={roomName}\r\n            onChange={(e) => setRoomName(e.target.value)}\r\n            disabled={isLoading}\r\n            required\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"participant-name\">Your Name</label>\r\n          <input\r\n            id=\"participant-name\"\r\n            type=\"text\"\r\n            placeholder=\"Enter your name\"\r\n            value={participantName}\r\n            onChange={(e) => setParticipantName(e.target.value)}\r\n            disabled={isLoading}\r\n            required\r\n          />\r\n        </div>\r\n        \r\n        {error && <div className=\"error\">{error}</div>}\r\n        \r\n        <button type=\"submit\" disabled={isLoading || !roomName || !participantName}>\r\n          {isLoading ? 'Joining...' : 'Join Room'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}