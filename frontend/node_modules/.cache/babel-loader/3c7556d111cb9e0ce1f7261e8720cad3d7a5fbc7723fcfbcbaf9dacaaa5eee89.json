{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dinhd\\\\Desktop\\\\Test\\\\frontend\\\\src\\\\components\\\\JoinForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './JoinForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const JoinForm = ({\n  onJoinRoom\n}) => {\n  _s();\n  const [roomName, setRoomName] = useState('');\n  const [participantName, setParticipantName] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!roomName || !participantName) {\n      setError('Room name and participant name are required');\n      return;\n    }\n    setIsLoading(true);\n    setError('');\n    try {\n      console.log(`Requesting token for room: ${roomName}, participant: ${participantName}`);\n\n      // Try to use the API with absolute URL if the proxy setup fails\n      let apiUrl = '/api/get-token';\n      console.log(`Sending request to: ${apiUrl}`);\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          roomName,\n          participantName\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        console.error('Error response from token API:', data);\n        throw new Error(data.error || 'Failed to get token');\n      }\n      console.log('Token received successfully');\n      // Don't log the actual token for security reasons\n      console.log('LiveKit URL:', data.url);\n      if (!data.token || !data.url) {\n        console.error('Invalid response from token API:', data);\n        throw new Error('Invalid token response from server');\n      }\n      onJoinRoom({\n        token: data.token,\n        url: data.url,\n        roomName,\n        participantName\n      });\n    } catch (err) {\n      console.error('Error joining room:', err);\n\n      // If fetch fails completely (e.g., server not running), try with a different URL\n      if (err.message === 'Failed to fetch') {\n        setError('Cannot connect to server. Make sure the backend is running.');\n        console.log('Trying fallback to direct URL...');\n        try {\n          const absoluteUrl = 'http://localhost:5000/api/get-token';\n          console.log(`Sending fallback request to: ${absoluteUrl}`);\n          const fallbackResponse = await fetch(absoluteUrl, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              roomName,\n              participantName\n            })\n          });\n          const fallbackData = await fallbackResponse.json();\n          if (!fallbackResponse.ok) {\n            throw new Error(fallbackData.error || 'Failed to get token');\n          }\n          console.log('Token received from fallback request');\n          onJoinRoom({\n            token: fallbackData.token,\n            url: fallbackData.url,\n            roomName,\n            participantName\n          });\n\n          // Clear error since fallback worked\n          setError('');\n          return;\n        } catch (fallbackErr) {\n          console.error('Fallback request also failed:', fallbackErr);\n          setError('Cannot connect to backend server. Please check that it is running at http://localhost:5000');\n        }\n      } else {\n        setError(err.message || 'Failed to join room');\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"join-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Join Video Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter a room name and your name to get started\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"room-name\",\n          children: \"Room Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"room-name\",\n          type: \"text\",\n          placeholder: \"Enter room name\",\n          value: roomName,\n          onChange: e => setRoomName(e.target.value),\n          disabled: isLoading,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"participant-name\",\n          children: \"Your Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"participant-name\",\n          type: \"text\",\n          placeholder: \"Enter your name\",\n          value: participantName,\n          onChange: e => setParticipantName(e.target.value),\n          disabled: isLoading,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading || !roomName || !participantName,\n        children: isLoading ? 'Connecting...' : 'Join Room'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(JoinForm, \"nDSUUzoocJ5xarQFOB4WPmSCIec=\");\n_c = JoinForm;\nvar _c;\n$RefreshReg$(_c, \"JoinForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","JoinForm","onJoinRoom","_s","roomName","setRoomName","participantName","setParticipantName","isLoading","setIsLoading","error","setError","handleSubmit","e","preventDefault","console","log","apiUrl","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","url","token","err","message","absoluteUrl","fallbackResponse","fallbackData","fallbackErr","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","type","placeholder","value","onChange","target","disabled","required","_c","$RefreshReg$"],"sources":["C:/Users/dinhd/Desktop/Test/frontend/src/components/JoinForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './JoinForm.css';\r\n\r\nexport const JoinForm = ({ onJoinRoom }) => {\r\n  const [roomName, setRoomName] = useState('');\r\n  const [participantName, setParticipantName] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!roomName || !participantName) {\r\n      setError('Room name and participant name are required');\r\n      return;\r\n    }\r\n    \r\n    setIsLoading(true);\r\n    setError('');\r\n    \r\n    try {\r\n      console.log(`Requesting token for room: ${roomName}, participant: ${participantName}`);\r\n      \r\n      // Try to use the API with absolute URL if the proxy setup fails\r\n      let apiUrl = '/api/get-token';\r\n      \r\n      console.log(`Sending request to: ${apiUrl}`);\r\n      const response = await fetch(apiUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          roomName,\r\n          participantName,\r\n        }),\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (!response.ok) {\r\n        console.error('Error response from token API:', data);\r\n        throw new Error(data.error || 'Failed to get token');\r\n      }\r\n      \r\n      console.log('Token received successfully');\r\n      // Don't log the actual token for security reasons\r\n      console.log('LiveKit URL:', data.url);\r\n      \r\n      if (!data.token || !data.url) {\r\n        console.error('Invalid response from token API:', data);\r\n        throw new Error('Invalid token response from server');\r\n      }\r\n      \r\n      onJoinRoom({\r\n        token: data.token,\r\n        url: data.url,\r\n        roomName,\r\n        participantName,\r\n      });\r\n    } catch (err) {\r\n      console.error('Error joining room:', err);\r\n      \r\n      // If fetch fails completely (e.g., server not running), try with a different URL\r\n      if (err.message === 'Failed to fetch') {\r\n        setError('Cannot connect to server. Make sure the backend is running.');\r\n        \r\n        console.log('Trying fallback to direct URL...');\r\n        try {\r\n          const absoluteUrl = 'http://localhost:5000/api/get-token';\r\n          console.log(`Sending fallback request to: ${absoluteUrl}`);\r\n          \r\n          const fallbackResponse = await fetch(absoluteUrl, {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n              roomName,\r\n              participantName,\r\n            }),\r\n          });\r\n          \r\n          const fallbackData = await fallbackResponse.json();\r\n          \r\n          if (!fallbackResponse.ok) {\r\n            throw new Error(fallbackData.error || 'Failed to get token');\r\n          }\r\n          \r\n          console.log('Token received from fallback request');\r\n          onJoinRoom({\r\n            token: fallbackData.token,\r\n            url: fallbackData.url,\r\n            roomName,\r\n            participantName,\r\n          });\r\n          \r\n          // Clear error since fallback worked\r\n          setError('');\r\n          return;\r\n        } catch (fallbackErr) {\r\n          console.error('Fallback request also failed:', fallbackErr);\r\n          setError('Cannot connect to backend server. Please check that it is running at http://localhost:5000');\r\n        }\r\n      } else {\r\n        setError(err.message || 'Failed to join room');\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"join-form\">\r\n      <div className=\"form-header\">\r\n        <h2>Join Video Chat</h2>\r\n        <p>Enter a room name and your name to get started</p>\r\n      </div>\r\n      \r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"room-name\">Room Name</label>\r\n          <input\r\n            id=\"room-name\"\r\n            type=\"text\"\r\n            placeholder=\"Enter room name\"\r\n            value={roomName}\r\n            onChange={(e) => setRoomName(e.target.value)}\r\n            disabled={isLoading}\r\n            required\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"participant-name\">Your Name</label>\r\n          <input\r\n            id=\"participant-name\"\r\n            type=\"text\"\r\n            placeholder=\"Enter your name\"\r\n            value={participantName}\r\n            onChange={(e) => setParticipantName(e.target.value)}\r\n            disabled={isLoading}\r\n            required\r\n          />\r\n        </div>\r\n        \r\n        {error && <div className=\"error\">{error}</div>}\r\n        \r\n        <button type=\"submit\" disabled={isLoading || !roomName || !participantName}>\r\n          {isLoading ? 'Connecting...' : 'Join Room'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}